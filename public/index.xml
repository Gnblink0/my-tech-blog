<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>👾 Gina&#39;s Tech Blog on Home Page</title>
    <link>http://localhost:1313/</link>
    <description>Recent content in 👾 Gina&#39;s Tech Blog on Home Page</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <copyright>Gian Xu</copyright>
    <lastBuildDate>Mon, 20 Jan 2025 20:30:09 -0800</lastBuildDate>
    <atom:link href="http://localhost:1313/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>基于 Github Flow 的 Git 总体工作流程</title>
      <link>http://localhost:1313/posts/git-workflow.zh/</link>
      <pubDate>Mon, 20 Jan 2025 20:30:09 -0800</pubDate>
      <guid>http://localhost:1313/posts/git-workflow.zh/</guid>
      <description>&lt;h2 id=&#34;why-git&#34; class=&#34;scroll-mt-8 group&#34;&gt;&#xA;  Why Git?&#xA;  &#xA;    &lt;a href=&#34;#why-git&#34;&#xA;        class=&#34;no-underline hidden opacity-50 hover:opacity-100 !text-inherit group-hover:inline-block&#34;&#xA;        aria-hidden=&#34;true&#34; title=&#34;Link to this heading&#34; tabindex=&#34;-1&#34;&gt;&#xA;        &lt;svg&#xA;  xmlns=&#34;http://www.w3.org/2000/svg&#34;&#xA;  width=&#34;16&#34;&#xA;  height=&#34;16&#34;&#xA;  fill=&#34;none&#34;&#xA;  stroke=&#34;currentColor&#34;&#xA;  stroke-linecap=&#34;round&#34;&#xA;  stroke-linejoin=&#34;round&#34;&#xA;  stroke-width=&#34;2&#34;&#xA;  class=&#34;lucide lucide-link w-4 h-4 block&#34;&#xA;  viewBox=&#34;0 0 24 24&#34;&#xA;&gt;&#xA;  &lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; /&gt;&#xA;  &lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; /&gt;&#xA;&lt;/svg&gt;&#xA;&#xA;    &lt;/a&gt;&#xA;  &#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Git/Github 是开发者最高频使用的工具/平台，无论开发什么，只要涉及多人协作，git 就是默认的&amp;quot;公共语言&amp;quot;，有时即使一个人独自开发，git 也依然是最可靠的版本控制方案甚至极简部署工具。&lt;/p&gt;&#xA;&lt;p&gt;项目一旦用上 git，相当于一个人掌握了某种超能力，可以随时给世界打点（commit），根据打点让时光倒流（版本控制），还可以看到世界是怎么被不同人影响的（查看每一次改动的作者与原因），剔除出对这个世界不好的影响因素（找出导致 bug 的代码），保证主世界线收束（审查 PR、保护主分支）。&lt;/p&gt;&#xA;&lt;p&gt;What a superpower!&lt;/p&gt;&#xA;&lt;p&gt;想掌握这种控制时间、协作与秩序超能力吗？从这篇文章迈出第一步吧！&lt;/p&gt;&#xA;&lt;h3 id=&#34;我为什么写一篇介绍-git-的文章&#34; class=&#34;scroll-mt-8 group&#34;&gt;&#xA;  我为什么写一篇介绍 git 的文章？&#xA;  &#xA;    &lt;a href=&#34;#%e6%88%91%e4%b8%ba%e4%bb%80%e4%b9%88%e5%86%99%e4%b8%80%e7%af%87%e4%bb%8b%e7%bb%8d-git-%e7%9a%84%e6%96%87%e7%ab%a0&#34;&#xA;        class=&#34;no-underline hidden opacity-50 hover:opacity-100 !text-inherit group-hover:inline-block&#34;&#xA;        aria-hidden=&#34;true&#34; title=&#34;Link to this heading&#34; tabindex=&#34;-1&#34;&gt;&#xA;        &lt;svg&#xA;  xmlns=&#34;http://www.w3.org/2000/svg&#34;&#xA;  width=&#34;16&#34;&#xA;  height=&#34;16&#34;&#xA;  fill=&#34;none&#34;&#xA;  stroke=&#34;currentColor&#34;&#xA;  stroke-linecap=&#34;round&#34;&#xA;  stroke-linejoin=&#34;round&#34;&#xA;  stroke-width=&#34;2&#34;&#xA;  class=&#34;lucide lucide-link w-4 h-4 block&#34;&#xA;  viewBox=&#34;0 0 24 24&#34;&#xA;&gt;&#xA;  &lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; /&gt;&#xA;  &lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; /&gt;&#xA;&lt;/svg&gt;&#xA;&#xA;    &lt;/a&gt;&#xA;  &#xA;&lt;/h3&gt;&#xA;&lt;p&gt;在 &lt;a href=&#34;https://missing.csail.mit.edu/&#34;&gt;MIT 的 The Missing Semester of Your CS Education&lt;/a&gt; 中就有一章专门讲 &lt;a href=&#34;https://missing.csail.mit.edu/2020/version-control/&#34;&gt;Version Control (Git)&lt;/a&gt;，反映了一个现实问题：Git 是开发中不可或缺的工具，但却往往是计算机教育中被忽略的&amp;quot;空白地带&amp;quot;，很多 CS 学生直到进入职场，才在手忙脚乱中被迫补上这一课。不过我作为一个幸运的 CS 学生，在 Northeastern 的 CS5520 Mobile App Development 课程里碰到一位很 practical 的老师 —— &lt;a href=&#34;https://www.linkedin.com/in/nedachangizi/&#34;&gt;Neda Changizi&lt;/a&gt;，她的教学并不拘泥于理论，而是紧扣&amp;quot;实际开发中会碰到什么、用什么、做什么&amp;quot;来设计课程，Git 和 GitHub 自然也成了教学的一部分：&lt;strong&gt;以 &lt;a href=&#34;https://docs.github.com/en/get-started/using-github/github-flow&#34;&gt;GitHub flow&lt;/a&gt; 方法为原型&lt;/strong&gt;，每次写作业都要新建 branch，然后经历一系列 add, commit, push, pull request, merge, checkout main, pull。尤其在期末项目中，GitHub 几乎成了我们小组的&amp;quot;办公室&amp;quot; —— 我们在那里讨论、同步进度、review 对方的代码、解决 merge conflict，每天都在上面高频协作。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Content Graph</title>
      <link>http://localhost:1313/graph/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/graph/</guid>
      <description></description>
    </item>
  </channel>
</rss>
